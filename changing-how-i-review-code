


---

---

I'm a big advocate for code reviews. I've written about my experiences reviewing code, including lists of dos and don'ts, how to survive your first code review, and common issues I see.

My views have largely been shaped by my experience with a particular kind of code review though. Like many devs, I've grown accustomed to the pull request model to help facilitate reviews. While it isn't perfect, I've always found it to be a great tool and largely an improvement to formal code review proceses, or reviews over email.

Recently, though, I've been seeing more and more thoughts expressing a different sentiment. Many devs are starting to become frustrated with the pull request model. There is a sense that pull requests actually might make it _too_ easy to make a comment about a line of code. This ease might actually be leading to the conflicts and hyper-zealous commenting that frustrates many in our industry. A common critique is that the pull request makes it so easy to comment on code, that many reviewers never even pull down the changes they are reviewing! And to be completly transparent, I'm guilty of that myself.

This got me wondering: are there better ways I can be reviewing code? What could I do differently? 

After asking I've decided to start making some changes in how I review code. They've been helping me recently, so I think they could help you and your team as well.

## Commenting on Code != Collaborating on Code

This was one of the big breakthroughs that I experienced in thinking about this. 
